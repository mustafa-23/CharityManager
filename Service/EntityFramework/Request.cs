//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CharityManager.Service.EntityFramework
{
    using System;
    using System.Collections.Generic;
    
    public partial class Request
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Request()
        {
            this.Researches = new HashSet<Research>();
            this.ManagerViewpoints = new HashSet<ManagerViewpoint>();
        }
    
        public int ID { get; set; }
        public int PatronID { get; set; }
        public int TypeEntityID { get; set; }
        public string No { get; set; }
        public System.DateTime IssueDate { get; set; }
        public System.DateTime CreateDate { get; set; }
        public int CreateUser { get; set; }
        public Nullable<System.DateTime> ModifyDate { get; set; }
        public Nullable<int> ModifyUser { get; set; }
        public bool Active { get; set; }
        public string Comment { get; set; }
        public Nullable<int> EstimatedValue { get; set; }
        public byte Status { get; set; }
        public Nullable<System.DateTime> ResearchDate { get; set; }
    
        public virtual Entity Entity { get; set; }
        public virtual Patron Patron { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Research> Researches { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ManagerViewpoint> ManagerViewpoints { get; set; }
    }
}
